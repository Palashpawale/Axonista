{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\weatherApp-Reactjs\\\\src\\\\forcast.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport searchWhite from \"./images/search-white.png\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = city => {\n    axios.get(`${apiKeys.base}weather?q=${city != \"[object Object]\" ? city : query}&units=metric&APPID=${apiKeys.key}`).then(response => {\n      setWeather(response.data);\n      setQuery(\"\");\n    }).catch(function (error) {\n      console.log(error);\n      setWeather(\"\");\n      setQuery(\"\");\n      setError({\n        message: \"Not Found\",\n        query: query\n      });\n    });\n  };\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true\n  }; //Default values of city can be changed\n\n  useEffect(() => {\n    search(\"Cork\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(ReactAnimatedWeather, {\n    icon: props.icon,\n    color: defaults.color,\n    size: defaults.size,\n    animate: defaults.animate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }\n  }, props.weather), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search any city\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: searchWhite,\n    onClick: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }\n  }, typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cityHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"temp\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }\n  }, \"Temperature\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }\n  }, Math.round(weather.main.temp), \"\\xB0c (\", weather.weather[0].main, \")\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }\n  }, \"Humidity\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }\n  }, Math.round(weather.main.humidity), \"%\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }\n  }, \"Visibility\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }\n  }, Math.round(weather.visibility), \" mi\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }, \"Wind Speed\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }\n  }, Math.round(weather.wind.speed), \" Km/h\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 1\n    }\n  }, error.query, \" \", error.message))));\n}\n\nexport default Forcast;","map":{"version":3,"sources":["C:/Users/user/weatherApp-Reactjs/src/forcast.js"],"names":["React","useState","useEffect","Component","axios","apiKeys","ReactAnimatedWeather","searchWhite","Forcast","props","query","setQuery","error","setError","weather","setWeather","search","city","get","base","key","then","response","data","catch","console","log","message","defaults","color","size","animate","icon","e","target","value","main","name","sys","country","Math","round","temp","humidity","visibility","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport searchWhite from \"./images/search-white.png\";\n\nfunction Forcast(props) {\nconst [query, setQuery] = useState(\"\");\nconst [error, setError] = useState(\"\");\nconst [weather, setWeather] = useState({});\n\n\nconst search = (city) => {\naxios\n.get(\n`${apiKeys.base}weather?q=${\ncity != \"[object Object]\" ? city : query\n }&units=metric&APPID=${apiKeys.key}`\n)\n.then((response) => {\nsetWeather(response.data);\nsetQuery(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather(\"\");\n        setQuery(\"\");\n        setError({ message: \"Not Found\", query: query });\n      });\n  };\n  \n\nconst defaults = {\ncolor: \"white\",size: 112,\nanimate: true,\n};\n\n\n//Default values of city can be changed\nuseEffect(() => {\nsearch(\"Cork\");\n}, []);\n\n\n\nreturn (\n<div className=\"forecast\">\n\n<div className=\"forecast-icon\">\n<ReactAnimatedWeather\nicon={props.icon}\ncolor={defaults.color}\nsize={defaults.size}\nanimate={defaults.animate}\n/>\n</div>\n<div className=\"today-weather\">\n<h3>{props.weather}</h3>\n\n<div className=\"search-box\">\n<input\ntype=\"text\"\nclassName=\"search-bar\"\nplaceholder=\"Search any city\"\nonChange={(e) => setQuery(e.target.value)}\nvalue={query}\n/>\n\n\n<div className=\"img-box\">\n{\" \"}\n<img\nsrc={searchWhite}\nonClick={search}\n/>\n</div>\n</div>\n<ul>\n{typeof weather.main != \"undefined\" ? (\n<div>\n{\" \"}\n\n\n<li className=\"cityHead\">\n<p>\n{weather.name}, {weather.sys.country}\n</p>\n<img\nclassName=\"temp\"\nsrc={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n/>\n</li>\n\n<li>\nTemperature{\" \"}\n<span className=\"temp\">\n{Math.round(weather.main.temp)}°c ({weather.weather[0].main})\n</span>\n</li>\n\n<li>\nHumidity{\" \"}\n<span className=\"temp\">\n{Math.round(weather.main.humidity)}%\n</span>\n</li>\n\n<li>\nVisibility{\" \"}\n<span className=\"temp\">\n{Math.round(weather.visibility)} mi\n</span>\n</li>\n\n<li>\n Wind Speed{\" \"}\n<span className=\"temp\">\n{Math.round(weather.wind.speed)} Km/h\n</span>\n</li>\n</div>\n) : (\n<li>\n{error.query} {error.message}\n</li>\n)}\n\n</ul>\n</div>\n</div>\n);\n}\n\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}